plugins {
    id 'java-library'
}

// Project information
group = 'org.luaj'
version = '3.0.2'

// Java version compatibility
java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
}

// Source sets
sourceSets {
    main {
        java {
            srcDirs = ['src/core', 'src/jse']
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Apache BCEL for bytecode manipulation (needed for luajc compiler)
    implementation 'org.apache.bcel:bcel:6.5.0'
    
    // JUnit for testing
    testImplementation 'junit:junit:4.13.2'
}

// Compilation options
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
    options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
}

// JAR configurations
jar {
    manifest {
        attributes(
            'Implementation-Title': 'Luaj',
            'Implementation-Version': project.version,
            'Implementation-Vendor': 'Luaj.org'
        )
    }
}

// Create a sources JAR
java {
    withSourcesJar()
}

// Create a Javadoc JAR
java {
    withJavadocJar()
}

// Disable javadoc task due to compilation issues with newer Java versions
javadoc.enabled = false

// Test configuration
test {
    useJUnit()
    
    // Set maximum heap size for tests
    maxHeapSize = "1G"
    
    // Show test results
    testLogging {
        events "passed", "skipped", "failed"
    }
}

// Custom task to run Lua scripts
task runLua(type: JavaExec) {
    group = 'Execution'
    description = 'Run a Lua script using Luaj'
    
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'lua'
    args = ['examples/lua/hello.lua']
}